# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName = "upload-documents-frontend"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Custom error handler
play.http.errorHandler = "uk.gov.hmrc.uploaddocuments.wiring.ErrorHandler"

play.http.router = prod.Routes
play.modules.enabled += "FrontendModule"

play.filters.headers.contentTypeOptions = nosniff
play.filters.headers.frameOptions = DENY
play.i18n.langs = ["en", "cy"]

play.filters.enabled += play.filters.csp.CSPFilter
play.filters.csp.directives {
 default-src = "'self' localhost:10100 localhost:9032"
 script-src = "'self' 'sha256-+6WnXIl4mbFTCARd8N3COQmT3bJJmo32N8q8ZSQAIcU=' localhost:10100 localhost:9032 localhost:12345 www.googletagmanager.com tagmanager.google.com https://www.google-analytics.com"
 style-src = "'self' 'sha256-47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=' 'sha256-spbSBGMIJLQ6phtvdQV28vrZdAhfIHux4eOe8oDfi4A=' localhost:10100 localhost:9032 tagmanager.google.com https://fonts.googleapis.com" 
 font-src = "'self' localhost:10100 data:"
 form-action  = "'self' localhost:10100 localhost:9570 localhost:* https://ssl.gstatic.com www.gstatic.com https://fonts.gstatic.com https://fonts.googleapis.com *.amazonaws.com *.upscan.tax.service.gov.uk"
 child-src = "'none'"
 object-src ="'none'"
 img-src = "'self' localhost:10100 localhost:9032 https://ssl.gstatic.com www.googletagmanager.com www.gstatic.com www.google-analytics.com data:"
 frame-src = "'self' www.googletagmanager.com"
 connect-src = "'self' localhost:10100 localhost:9570 localhost:12345 *.amazonaws.com www.googletagmanager.com www.google-analytics.com tagmanager.google.com *.upscan.tax.service.gov.uk"
}

play.i18n.langCookieHttpOnly = true

controllers {

  uk.gov.hmrc.uploaddocuments.controllers.FileUploadJourneyController {
    needsAuditing = true
    needsLogging = true
  }

  com.kenshoo.play.metrics.MetricsController = {
    needsAuditing = false
    needsLogging = false
  }

  confidenceLevel = 50
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.upload-documents-frontend.
      enabled = false
      legacy = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }

    upscan-initiate {
      host = localhost
      port = 9570
    }
  }
}

metrics {
  name = upload-documents-frontend
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = N/A
  host = auto
}

contact-frontend.host = "http://localhost:9250"
contact-frontend.serviceId = "upload-documents"

feedback-frontend {
  host = "http://localhost:9514"
  url = "/feedback"
  formIdentifier = "upload-documents"
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }

mongodb {
  uri = "mongodb://localhost:27017/upload-documents?rm.monitorRefreshMS=1000&rm.failover=default"
  session.expiration = 1 hour
}

host = "http://localhost:10100"

run.mode = "Dev"

json.encryption.key = "UrI5kMAs7ewjByGBXD2+5+v3GZdCzutjTe07g37xc2M="

it.helpdesk.url = "https://intranet.prod.dop.corp.hmrc.gov.uk/page/how-do-i/get-help-it-phones-and-data/it-help/it-helpdesk/get-help-it-problem"

urls {
  callback.internal = "http://localhost:10100"
  callback.external = "http://localhost:10100"
  signOut = "http://localhost:9553/bas-gateway/sign-out-without-state"
}

tracking-consent-frontend {
  gtm.container = "b"
}

session{
  timeoutSeconds = 9000
  countdownInSeconds = 120
}

# The total time you accept a request to take (it will be interrupted even if the remote host is still sending data)
play.ws.timeout.request = 5 minutes

accessibility-statement.service-path = "/upload-documents"

govuk.start.url="https://www.gov.uk"

fileUploadResultPush.retryIntervals = [1s, 2s, 4s, 8s]

# enable this flag locally to trace changes of the internal state of the journey
# always keep disabled on production and staging
trace.fsm = false